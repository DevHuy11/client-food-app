{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mern\\\\Do_an_shop\\\\app\\\\src\\\\components\\\\body\\\\shop\\\\Dish.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport CardComponentShop from '../smallComponent/CardComponentShop';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dish = () => {\n  _s();\n\n  const url = useParams().slug;\n  const allData = useSelector(state => state);\n  let data = [];\n  Object.keys(allData).map((key, index) => {\n    if (key == url) data = allData[key];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dish, \"qM1gJXO+pvwSWAuj4w51vGmCh78=\", false, function () {\n  return [useParams, useSelector];\n});\n\n_c = Dish;\nexport default Dish;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dish\");","map":{"version":3,"sources":["D:/Mern/Do_an_shop/app/src/components/body/shop/Dish.jsx"],"names":["React","useParams","useSelector","CardComponentShop","Dish","url","slug","allData","state","data","Object","keys","map","key","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,GAAG,GAAGJ,SAAS,GAAGK,IAAxB;AACA,QAAMC,OAAO,GAAGL,WAAW,CAACM,KAAK,IAAEA,KAAR,CAA3B;AACA,MAAIC,IAAI,GAAG,EAAX;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqBK,GAArB,CAAyB,CAACC,GAAD,EAAMC,KAAN,KAAe;AACpC,QAAGD,GAAG,IAAER,GAAR,EACII,IAAI,GAAGF,OAAO,CAACM,GAAD,CAAd;AACP,GAHD;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAdD;;GAAMT,I;UACUH,S,EACIC,W;;;KAFdE,I;AAgBN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport CardComponentShop from '../smallComponent/CardComponentShop';\r\nconst Dish = () => {\r\n    const url=  useParams().slug;\r\n    const allData = useSelector(state=>state)\r\n    let data = []\r\n    Object.keys(allData).map((key, index) =>{\r\n        if(key==url)\r\n            data = allData[key];\r\n    });\r\n    \r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dish;\r\n"]},"metadata":{},"sourceType":"module"}
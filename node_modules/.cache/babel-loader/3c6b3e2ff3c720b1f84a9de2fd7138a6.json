{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mern\\\\Do_an_shop\\\\app\\\\src\\\\components\\\\body\\\\helper\\\\login\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Typography, TextField, Button, Paper, Link } from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport { RequestLogin } from \"../../../../store/AxiosLibrary\";\nimport Cookies from 'universal-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const cookies = new Cookies(); //2--->get Error from server side////3---->save accessToken in cookie\n\n  const [errEmail, setErrEmail] = useState(\"\");\n  const [errPassword, setErrPassword] = useState(\"\");\n  const [conditionForErrPassword, setConditionForErrPassword] = useState(false);\n  const [conditionForErrEmail, setConditionForErrEmail] = useState(false); //1--->Handle form (react-hook-form)\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    RequestLogin(data).then(res => {\n      const resData = res.data;\n\n      if (!res.data.success) {\n        if (resData.err_email.length != 0) {\n          setConditionForErrEmail(true);\n          setErrEmail(resData.err_email[0]);\n        }\n\n        if (resData.err_password.length != 0) {\n          setConditionForErrPassword(true);\n          setErrPassword(resData.err_password[0]);\n        }\n      } else {\n        //Assign error is empty\n        setConditionForErrEmail(false);\n        setErrEmail(\"\");\n        setConditionForErrPassword(false);\n        setErrPassword(\"\"); //Save accessToken in cookie\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"LoginForm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        className: \"loginText\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"coverTextField\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-basic\",\n            label: \"Email\",\n            variant: \"outlined\",\n            className: \"inputLogin\",\n            defaultValue: \"\",\n            fullWidth: true,\n            ...register(\"email\"),\n            error: conditionForErrEmail,\n            helperText: errEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"coverTextField\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-basic\",\n            label: \"Password\",\n            variant: \"outlined\",\n            type: \"password\",\n            className: \"inputLogin\",\n            defaultValue: \"\",\n            fullWidth: true,\n            ...register(\"password\"),\n            error: conditionForErrPassword,\n            helperText: errPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          className: \"buttonLogin\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"p\",\n          className: \"registerText\",\n          children: [\"Do you have account ?\", /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/signup\",\n            className: \"registerLink\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"JrCVQvLJK13NrDMHchpDxUR04rw=\", false, function () {\n  return [useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/Mern/Do_an_shop/app/src/components/body/helper/login/Login.jsx"],"names":["React","useState","useEffect","Box","Typography","TextField","Button","Paper","Link","useForm","RequestLogin","Cookies","Login","cookies","errEmail","setErrEmail","errPassword","setErrPassword","conditionForErrPassword","setConditionForErrPassword","conditionForErrEmail","setConditionForErrEmail","register","handleSubmit","formState","errors","onSubmit","data","then","res","resData","success","err_email","length","err_password"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,KAA7C,EAAoDC,IAApD,QAAgE,eAAhE;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAElB,QAAMC,OAAO,GAAG,IAAIF,OAAJ,EAAhB,CAFkB,CAIlB;;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACiB,uBAAD,EAA0BC,0BAA1B,IAAwDlB,QAAQ,CAAC,KAAD,CAAtE;AACA,QAAM,CAACmB,oBAAD,EAAuBC,uBAAvB,IAAkDpB,QAAQ,CAAC,KAAD,CAAhE,CARkB,CASlB;;AAEA,QAAM;AACJqB,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAHP,MAIFhB,OAAO,EAJX;;AAMA,QAAMiB,QAAQ,GAAIC,IAAD,IAAU;AACzBjB,IAAAA,YAAY,CAACiB,IAAD,CAAZ,CAAmBC,IAAnB,CAAyBC,GAAD,IAAS;AAC/B,YAAMC,OAAO,GAAGD,GAAG,CAACF,IAApB;;AACA,UAAI,CAACE,GAAG,CAACF,IAAJ,CAASI,OAAd,EAAuB;AACrB,YAAID,OAAO,CAACE,SAAR,CAAkBC,MAAlB,IAA4B,CAAhC,EAAmC;AACjCZ,UAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACAN,UAAAA,WAAW,CAACe,OAAO,CAACE,SAAR,CAAkB,CAAlB,CAAD,CAAX;AACD;;AACD,YAAIF,OAAO,CAACI,YAAR,CAAqBD,MAArB,IAA+B,CAAnC,EAAsC;AACpCd,UAAAA,0BAA0B,CAAC,IAAD,CAA1B;AACAF,UAAAA,cAAc,CAACa,OAAO,CAACI,YAAR,CAAqB,CAArB,CAAD,CAAd;AACD;AACF,OATD,MASO;AACL;AACAb,QAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACAN,QAAAA,WAAW,CAAC,EAAD,CAAX;AACAI,QAAAA,0BAA0B,CAAC,KAAD,CAA1B;AACAF,QAAAA,cAAc,CAAC,EAAD,CAAd,CALK,CAOL;AAGD;AACF,KAtBD;AAuBD,GAxBD;;AA0BA,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAM,QAAA,QAAQ,EAAEM,YAAY,CAACG,QAAD,CAA5B;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACE,QAAC,SAAD;AACE,YAAA,EAAE,EAAC,gBADL;AAEE,YAAA,KAAK,EAAC,OAFR;AAGE,YAAA,OAAO,EAAC,UAHV;AAIE,YAAA,SAAS,EAAC,YAJZ;AAKE,YAAA,YAAY,EAAC,EALf;AAME,YAAA,SAAS,MANX;AAAA,eAOMJ,QAAQ,CAAC,OAAD,CAPd;AAQE,YAAA,KAAK,EAAEF,oBART;AASE,YAAA,UAAU,EAAEN;AATd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACE,QAAC,SAAD;AACE,YAAA,EAAE,EAAC,gBADL;AAEE,YAAA,KAAK,EAAC,UAFR;AAGE,YAAA,OAAO,EAAC,UAHV;AAIE,YAAA,IAAI,EAAC,UAJP;AAKE,YAAA,SAAS,EAAC,YALZ;AAME,YAAA,YAAY,EAAC,EANf;AAOE,YAAA,SAAS,MAPX;AAAA,eAQMQ,QAAQ,CAAC,UAAD,CARd;AASE,YAAA,KAAK,EAAEJ,uBATT;AAUE,YAAA,UAAU,EAAEF;AAVd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAdF,eA4BE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,SAAS,EAAC,aAAtC;AAAoD,UAAA,IAAI,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BF,eA+BE;AAAA;AAAA;AAAA;AAAA,gBA/BF,eAgCE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,GAApB;AAAwB,UAAA,SAAS,EAAC,cAAlC;AAAA,2DAEE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,SAAX;AAAqB,YAAA,SAAS,EAAC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD,CA3FD;;GAAMJ,K;UAeAH,O;;;KAfAG,K;AA6FN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Box, Typography, TextField, Button, Paper, Link } from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { RequestLogin } from \"../../../../store/AxiosLibrary\";\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst Login = () => {\r\n\r\n  const cookies = new Cookies();\r\n  \r\n  //2--->get Error from server side////3---->save accessToken in cookie\r\n  const [errEmail, setErrEmail] = useState(\"\");\r\n  const [errPassword, setErrPassword] = useState(\"\");\r\n  const [conditionForErrPassword, setConditionForErrPassword] = useState(false);\r\n  const [conditionForErrEmail, setConditionForErrEmail] = useState(false);\r\n  //1--->Handle form (react-hook-form)\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    RequestLogin(data).then((res) => {\r\n      const resData = res.data;\r\n      if (!res.data.success) {\r\n        if (resData.err_email.length != 0) {\r\n          setConditionForErrEmail(true);\r\n          setErrEmail(resData.err_email[0]);\r\n        }\r\n        if (resData.err_password.length != 0) {\r\n          setConditionForErrPassword(true);\r\n          setErrPassword(resData.err_password[0]);\r\n        }\r\n      } else {\r\n        //Assign error is empty\r\n        setConditionForErrEmail(false);\r\n        setErrEmail(\"\");\r\n        setConditionForErrPassword(false);\r\n        setErrPassword(\"\");\r\n\r\n        //Save accessToken in cookie\r\n      \r\n\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box className=\"LoginForm\">\r\n      <Box className=\"form\">\r\n        <Typography variant=\"h5\" className=\"loginText\">\r\n          Login\r\n        </Typography>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Box className=\"coverTextField\">\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n              className=\"inputLogin\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              {...register(\"email\")}\r\n              error={conditionForErrEmail}\r\n              helperText={errEmail}\r\n            />\r\n          </Box>\r\n          <Box className=\"coverTextField\">\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              type=\"password\"\r\n              className=\"inputLogin\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              {...register(\"password\")}\r\n              error={conditionForErrPassword}\r\n              helperText={errPassword}\r\n            />\r\n          </Box>\r\n          <Button variant=\"contained\" className=\"buttonLogin\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n          <br></br>\r\n          <Typography variant=\"p\" className=\"registerText\">\r\n            Do you have account ?\r\n            <Link href=\"/signup\" className=\"registerLink\">\r\n              Sign up\r\n            </Link>\r\n          </Typography>\r\n        </form>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}
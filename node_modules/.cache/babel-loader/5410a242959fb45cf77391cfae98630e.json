{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getDataPizza, getDataSushi, getDataHamburger, getDataPancake, getDataDumplings, getDataCupcake, getDataChicken, getDataNoodle, getDataSalad } from \"./dataCreateAsyncThunk\";\nconst dataPizzaSlice = createSlice({\n  name: \"pizza\",\n  initialState: {},\n  extraReducers: {\n    [getDataPizza.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getDataPizza.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.pizza = action.payload;\n    },\n    [getDataPizza.rejected]: (state, action) => {\n      state.status = \"failed\";\n    }\n  }\n});\nconst dataSushiSlice = createSlice({\n  name: \"sushi\",\n  initialState: {},\n  extraReducers: {\n    [getDataSushi.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getDataSushi.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.sushi = action.payload;\n    },\n    [getDataSushi.rejected]: (state, action) => {\n      state.status = \"failed\";\n    }\n  }\n});\nconst dataHamburgerSlice = createSlice({\n  name: \"hamburger\",\n  initialState: {},\n  extraReducers: {\n    [getDataHamburger.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getDataHamburger.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.hamburger = action.payload;\n    },\n    [getDataHamburger.rejected]: (state, action) => {\n      state.status = \"failed\";\n    }\n  }\n});\nconst dataPancakeSlice = createSlice({\n  name: \"pancake\",\n  initialState: {},\n  extraReducers: {\n    [getDataPancake.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getDataPancake.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.cupcake = action.payload;\n    },\n    [getDataPancake.rejected]: (state, action) => {\n      state.status = \"failed\";\n    }\n  }\n});\nconst dataCupcakeSlice = createSlice({\n  name: \"cupcake\",\n  initialState: {},\n  extraReducers: {\n    [getDataCupcake.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getDataCupcake.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.sushi = action.payload;\n    },\n    [getDataCupcake.rejected]: (state, action) => {\n      state.status = \"failed\";\n    }\n  }\n});\nconst dataDumplingsSlice = createSlice({\n  name: \"dumplings\",\n  initialState: {},\n  extraReducers: {\n    [getDataDumplings.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getDataDumplings.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.dumplings = action.payload;\n    },\n    [getDataDumplings.rejected]: (state, action) => {\n      state.status = \"failed\";\n    }\n  }\n});\nconst dataChickenSlice = createSlice({\n  name: \"chicken\",\n  initialState: {},\n  extraReducers: {\n    [getDataChicken.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getDataChicken.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.dumplings = action.payload;\n    },\n    [getDataChicken.rejected]: (state, action) => {\n      state.status = \"failed\";\n    }\n  }\n});\nconst dataNoodleSlice = createSlice({\n  name: \"noodle\",\n  initialState: {},\n  extraReducers: {\n    [getDataNoodle.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getDataNoodle.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.dumplings = action.payload;\n    },\n    [getDataNoodle.rejected]: (state, action) => {\n      state.status = \"failed\";\n    }\n  }\n});\nconst dataSaladSlice = createSlice({\n  name: \"salad\",\n  initialState: {},\n  extraReducers: {\n    [getDataSalad.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getDataSalad.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.dumplings = action.payload;\n    },\n    [getDataSalad.rejected]: (state, action) => {\n      state.status = \"failed\";\n    }\n  }\n}); //Reducers\n\nconst dataPizzaReducers = dataPizzaSlice.reducer;\nconst dataSushiReducers = dataSushiSlice.reducer;\nconst dataHamburgerReducers = dataHamburgerSlice.reducer;\nconst dataPancakeReducers = dataPancakeSlice.reducer;\nconst dataDumplingsReducers = dataDumplingsSlice.reducer;\nconst dataCupcakeReducers = dataCupcakeSlice.reducer;\nconst dataChickenReducers = dataChickenSlice.reducer;\nconst dataSaladReducers = dataSaladSlice.reducer;\nconst dataNoodleReducers = dataNoodleSlice.reducer;\nexport { dataPizzaReducers, dataSushiReducers, dataPancakeReducers, dataHamburgerReducers, dataChickenReducers, dataSaladReducers, dataNoodleReducers, dataCupcakeReducers, dataDumplingsReducers };","map":{"version":3,"sources":["C:/Users/abc/OneDrive/Documents/Do_an_shop/app/src/features/dataSlice.js"],"names":["createSlice","getDataPizza","getDataSushi","getDataHamburger","getDataPancake","getDataDumplings","getDataCupcake","getDataChicken","getDataNoodle","getDataSalad","dataPizzaSlice","name","initialState","extraReducers","pending","state","action","status","fulfilled","pizza","payload","rejected","dataSushiSlice","sushi","dataHamburgerSlice","hamburger","dataPancakeSlice","cupcake","dataCupcakeSlice","dataDumplingsSlice","dumplings","dataChickenSlice","dataNoodleSlice","dataSaladSlice","dataPizzaReducers","reducer","dataSushiReducers","dataHamburgerReducers","dataPancakeReducers","dataDumplingsReducers","dataCupcakeReducers","dataChickenReducers","dataSaladReducers","dataNoodleReducers"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\nimport {\r\n    getDataPizza, getDataSushi,\r\n    getDataHamburger, getDataPancake,\r\n    getDataDumplings, getDataCupcake,\r\n    getDataChicken, getDataNoodle,\r\n    getDataSalad\r\n} from \"./dataCreateAsyncThunk\"\r\n\r\nconst dataPizzaSlice = createSlice({\r\n    name: \"pizza\",\r\n    initialState: {},\r\n    extraReducers: {\r\n        [getDataPizza.pending]: (state, action) => {\r\n            state.status = \"loading\";\r\n        },\r\n        [getDataPizza.fulfilled]: (state, action) => {\r\n          state.status = \"success\";\r\n          state.pizza = action.payload;\r\n        },\r\n        [getDataPizza.rejected]: (state, action) => {\r\n            state.status = \"failed\";\r\n        },\r\n    }\r\n})\r\nconst dataSushiSlice = createSlice({\r\n    name: \"sushi\",\r\n    initialState: {},\r\n    extraReducers: {\r\n        [getDataSushi.pending]: (state, action) => {\r\n            state.status = \"loading\";\r\n        },\r\n        [getDataSushi.fulfilled]: (state, action) => {\r\n          state.status = \"success\";\r\n          state.sushi = action.payload;\r\n        },\r\n        [getDataSushi.rejected]: (state, action) => {\r\n            state.status = \"failed\";\r\n        },\r\n    }\r\n})\r\n\r\nconst dataHamburgerSlice = createSlice({\r\n    name: \"hamburger\",\r\n    initialState: {},\r\n    extraReducers: {\r\n        [getDataHamburger.pending]: (state, action) => {\r\n            state.status = \"loading\";\r\n        },\r\n        [getDataHamburger.fulfilled]: (state, action) => {\r\n          state.status = \"success\";\r\n          state.hamburger = action.payload;\r\n        },\r\n        [getDataHamburger.rejected]: (state, action) => {\r\n            state.status = \"failed\";\r\n        },\r\n    }\r\n})\r\n\r\nconst dataPancakeSlice = createSlice({\r\n    name: \"pancake\",\r\n    initialState: {},\r\n    extraReducers: {\r\n        [getDataPancake.pending]: (state, action) => {\r\n            state.status = \"loading\";\r\n        },\r\n        [getDataPancake.fulfilled]: (state, action) => {\r\n          state.status = \"success\";\r\n          state.cupcake = action.payload;\r\n        },\r\n        [getDataPancake.rejected]: (state, action) => {\r\n            state.status = \"failed\";\r\n        },\r\n    }\r\n})\r\nconst dataCupcakeSlice = createSlice({\r\n    name: \"cupcake\",\r\n    initialState: {},\r\n    extraReducers: {\r\n        [getDataCupcake.pending]: (state, action) => {\r\n            state.status = \"loading\";\r\n        },\r\n        [getDataCupcake.fulfilled]: (state, action) => {\r\n          state.status = \"success\";\r\n          state.sushi = action.payload;\r\n        },\r\n        [getDataCupcake.rejected]: (state, action) => {\r\n            state.status = \"failed\";\r\n        },\r\n    }\r\n})\r\n\r\nconst dataDumplingsSlice = createSlice({\r\n    name: \"dumplings\",\r\n    initialState: {},\r\n    extraReducers: {\r\n        [getDataDumplings.pending]: (state, action) => {\r\n            state.status = \"loading\";\r\n        },\r\n        [getDataDumplings.fulfilled]: (state, action) => {\r\n          state.status = \"success\";\r\n          state.dumplings = action.payload;\r\n        },\r\n        [getDataDumplings.rejected]: (state, action) => {\r\n            state.status = \"failed\";\r\n        },\r\n    }\r\n})\r\nconst dataChickenSlice = createSlice({\r\n    name: \"chicken\",\r\n    initialState: {},\r\n    extraReducers: {\r\n        [getDataChicken.pending]: (state, action) => {\r\n            state.status = \"loading\";\r\n        },\r\n        [getDataChicken.fulfilled]: (state, action) => {\r\n          state.status = \"success\";\r\n          state.dumplings = action.payload;\r\n        },\r\n        [getDataChicken.rejected]: (state, action) => {\r\n            state.status = \"failed\";\r\n        },\r\n    }\r\n})\r\nconst dataNoodleSlice = createSlice({\r\n    name: \"noodle\",\r\n    initialState: {},\r\n    extraReducers: {\r\n        [getDataNoodle.pending]: (state, action) => {\r\n            state.status = \"loading\";\r\n        },\r\n        [getDataNoodle.fulfilled]: (state, action) => {\r\n          state.status = \"success\";\r\n          state.dumplings = action.payload;\r\n        },\r\n        [getDataNoodle.rejected]: (state, action) => {\r\n            state.status = \"failed\";\r\n        },\r\n    }\r\n})\r\n\r\nconst dataSaladSlice = createSlice({\r\n    name: \"salad\",\r\n    initialState: {},\r\n    extraReducers: {\r\n        [getDataSalad.pending]: (state, action) => {\r\n            state.status = \"loading\";\r\n        },\r\n        [getDataSalad.fulfilled]: (state, action) => {\r\n          state.status = \"success\";\r\n          state.dumplings = action.payload;\r\n        },\r\n        [getDataSalad.rejected]: (state, action) => {\r\n            state.status = \"failed\";\r\n        },\r\n    }\r\n})\r\n//Reducers\r\n\r\nconst dataPizzaReducers = dataPizzaSlice.reducer\r\nconst dataSushiReducers = dataSushiSlice.reducer\r\n\r\nconst dataHamburgerReducers = dataHamburgerSlice.reducer\r\nconst dataPancakeReducers = dataPancakeSlice.reducer\r\n\r\nconst dataDumplingsReducers = dataDumplingsSlice.reducer\r\nconst dataCupcakeReducers = dataCupcakeSlice.reducer\r\n\r\nconst dataChickenReducers = dataChickenSlice.reducer\r\nconst dataSaladReducers = dataSaladSlice.reducer\r\n\r\nconst dataNoodleReducers = dataNoodleSlice.reducer\r\n\r\nexport {\r\n    dataPizzaReducers, dataSushiReducers,\r\n    dataPancakeReducers, dataHamburgerReducers,\r\n    dataChickenReducers, dataSaladReducers,\r\n    dataNoodleReducers, dataCupcakeReducers,\r\n    dataDumplingsReducers\r\n};"]},"metadata":{},"sourceType":"module"}
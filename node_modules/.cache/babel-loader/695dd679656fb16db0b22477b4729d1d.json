{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mern\\\\Do_an_shop\\\\app\\\\src\\\\components\\\\body\\\\smallComponent\\\\CheckingForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Card, CardActions, CardContent, CardMedia, Button, Typography, Modal, Link } from \"@mui/material\";\nimport { AddIcon, RemoveIcon } from \"@mui/icons-material/Add\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { handleClose } from \"../../../features/HandleClickToAppearCheckoutForm\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkingform = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [count, setCount] = useState(0);\n  const open = useSelector(state => state.handleClick.open);\n  const dataCheckingForm = useSelector(state => state);\n  const checkLogin = useSelector(state => state.user.checkLogin);\n  const dataforForm = dataCheckingForm.handleClick.product.payload; //If user login push product in array product in mongodb alas\n  //else redirect to /login\n\n  const handleClick = () => {\n    if (!checkLogin) {\n      navigate(\"/login\");\n    }\n\n    console.log(\"Login is \" + checkLogin);\n  };\n\n  if (dataforForm == undefined) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false); ///////////Component loading\n\n  const HandleClose = () => dispatch(handleClose());\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: HandleClose,\n    className: \"Form_Check_Infor\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"cardForm\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"elementCard\",\n        children: /*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          alt: \"Product is selected\",\n          className: \"imageCard\",\n          image: dataforForm.images[0].imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"elementCard\",\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            component: \"div\",\n            className: \"test1\",\n            children: dataforForm.foodName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"small\",\n            component: \"div\",\n            className: \"test1\",\n            children: dataforForm.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"small\",\n            component: \"div\",\n            className: \"test1\",\n            children: [dataforForm.price, \" $\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          className: \"Button_CheckingForm\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), count, /*#__PURE__*/_jsxDEV(Button, {\n            children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/cart\",\n            underline: \"none\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"Go to cart \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClick,\n            children: \"Add to cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkingform, \"OS3JeMFxixLMgaM/rmE7y2nr6PM=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector, useSelector];\n});\n\n_c = Checkingform;\nexport default Checkingform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkingform\");","map":{"version":3,"sources":["D:/Mern/Do_an_shop/app/src/components/body/smallComponent/CheckingForm.jsx"],"names":["React","useEffect","useState","Box","Card","CardActions","CardContent","CardMedia","Button","Typography","Modal","Link","AddIcon","RemoveIcon","useNavigate","useSelector","useDispatch","handleClose","Checkingform","dispatch","navigate","count","setCount","open","state","handleClick","dataCheckingForm","checkLogin","user","dataforForm","product","payload","console","log","undefined","HandleClose","images","imageUrl","foodName","description","price"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n  Modal,\r\n  Link,\r\n} from \"@mui/material\";\r\n\r\nimport { AddIcon, RemoveIcon } from \"@mui/icons-material/Add\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { handleClose } from \"../../../features/HandleClickToAppearCheckoutForm\";\r\n\r\nconst Checkingform = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [count, setCount] = useState(0);\r\n\r\n  const open = useSelector((state) => state.handleClick.open);\r\n  const dataCheckingForm = useSelector((state) => state);\r\n  const checkLogin = useSelector((state) => state.user.checkLogin);\r\n\r\n  const dataforForm = dataCheckingForm.handleClick.product.payload;\r\n\r\n  //If user login push product in array product in mongodb alas\r\n  //else redirect to /login\r\n\r\n  const handleClick = () => {\r\n    if (!checkLogin) {\r\n      navigate(\"/login\");\r\n    }\r\n    console.log(\"Login is \" + checkLogin);\r\n  };\r\n\r\n  if (dataforForm == undefined) return <></>; ///////////Component loading\r\n\r\n  const HandleClose = () => dispatch(handleClose());\r\n\r\n  return (\r\n    <Modal open={open} onClose={HandleClose} className=\"Form_Check_Infor\">\r\n      <Card className=\"cardForm\">\r\n        <Box className=\"elementCard\">\r\n          <CardMedia\r\n            component=\"img\"\r\n            alt=\"Product is selected\"\r\n            className=\"imageCard\"\r\n            image={dataforForm.images[0].imageUrl}\r\n          />\r\n        </Box>\r\n        <Box className=\"elementCard\">\r\n          <CardContent>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h6\"\r\n              component=\"div\"\r\n              className=\"test1\"\r\n            >\r\n              {dataforForm.foodName}\r\n            </Typography>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"small\"\r\n              component=\"div\"\r\n              className=\"test1\"\r\n            >\r\n              {dataforForm.description}\r\n            </Typography>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"small\"\r\n              component=\"div\"\r\n              className=\"test1\"\r\n            >\r\n              {dataforForm.price} $\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions className=\"Button_CheckingForm\">\r\n            <Button>\r\n              <AddIcon />\r\n            </Button>\r\n            {count}\r\n            <Button>\r\n              <RemoveIcon />\r\n            </Button>\r\n            <Link href=\"/cart\" underline=\"none\">\r\n              <Button>Go to cart </Button>\r\n            </Link>\r\n            <Button onClick={handleClick}>Add to cart</Button>\r\n          </CardActions>\r\n        </Box>\r\n      </Card>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Checkingform;\r\n"]},"metadata":{},"sourceType":"module"}
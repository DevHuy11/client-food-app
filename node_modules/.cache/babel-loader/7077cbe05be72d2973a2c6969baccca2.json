{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst url = \"http://localhost:5000/api/private/read\";\nexport const getDataPizza = createAsyncThunk(\"read/pizza\", async () => {\n  return await axios.get(`${url}/pizza`).then(res => res.data.data);\n});\nexport const getDataSushi = createAsyncThunk(\"read/sushi\", async () => {\n  return await axios.get(`${url}/`);\n});\nconst dataSlice = createSlice({\n  name: \"pizza\",\n  initialState: {},\n  extraReducers: {\n    [getDataPizza.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getDataPizza.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.pizza = action.payload;\n    },\n    [getDataPizza.rejected]: (state, action) => {\n      state.status = \"failed\";\n    }\n  }\n});\nexport default dataSlice.reducer;","map":{"version":3,"sources":["C:/Users/abc/OneDrive/Documents/Do_an_shop/app/src/features/dataSlice.js"],"names":["createSlice","createAsyncThunk","axios","url","getDataPizza","get","then","res","data","getDataSushi","dataSlice","name","initialState","extraReducers","pending","state","action","status","fulfilled","pizza","payload","rejected","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,wCAAZ;AAEA,OAAO,MAAMC,YAAY,GAAGH,gBAAgB,CACxC,YADwC,EAExC,YAAY;AACR,SAAO,MAAMC,KAAK,CAACG,GAAN,CAAW,GAAEF,GAAI,QAAjB,EAA2BG,IAA3B,CACTC,GAAG,IAAEA,GAAG,CAACC,IAAJ,CAASA,IADL,CAAb;AAGH,CANuC,CAArC;AASP,OAAO,MAAMC,YAAY,GAAGR,gBAAgB,CACxC,YADwC,EAExC,YAAY;AACR,SAAO,MAAMC,KAAK,CAACG,GAAN,CAAW,GAAEF,GAAI,GAAjB,CAAb;AACH,CAJuC,CAArC;AAOP,MAAMO,SAAS,GAAGV,WAAW,CAAC;AAC1BW,EAAAA,IAAI,EAAE,OADoB;AAE1BC,EAAAA,YAAY,EAAE,EAFY;AAG1BC,EAAAA,aAAa,EAAE;AACX,KAACT,YAAY,CAACU,OAAd,GAAwB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACE,MAAN,GAAe,SAAf;AACH,KAHU;AAIX,KAACb,YAAY,CAACc,SAAd,GAA0B,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,MAAAA,KAAK,CAACE,MAAN,GAAe,SAAf;AACAF,MAAAA,KAAK,CAACI,KAAN,GAAcH,MAAM,CAACI,OAArB;AACD,KAPU;AAQX,KAAChB,YAAY,CAACiB,QAAd,GAAyB,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC1CD,MAAAA,KAAK,CAACE,MAAN,GAAe,QAAf;AACD;AAVU;AAHW,CAAD,CAA7B;AAiBA,eAAeP,SAAS,CAACY,OAAzB","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\nimport axios from \"axios\"\r\n\r\nconst url = \"http://localhost:5000/api/private/read\"\r\n\r\nexport const getDataPizza = createAsyncThunk(\r\n    \"read/pizza\",\r\n    async () => {\r\n        return await axios.get(`${url}/pizza`) .then(\r\n            res=>res.data.data\r\n        )\r\n    }\r\n)\r\n\r\nexport const getDataSushi = createAsyncThunk(\r\n    \"read/sushi\",\r\n    async () => {\r\n        return await axios.get(`${url}/`)\r\n    }\r\n)\r\n\r\nconst dataSlice = createSlice({\r\n    name: \"pizza\",\r\n    initialState: {},\r\n    extraReducers: {\r\n        [getDataPizza.pending]: (state, action) => {\r\n            state.status = \"loading\";\r\n        },\r\n        [getDataPizza.fulfilled]: (state, action) => {\r\n          state.status = \"success\";\r\n          state.pizza = action.payload;\r\n        },\r\n        [getDataPizza.rejected]: (state, action) => {\r\n          state.status = \"failed\";\r\n        },\r\n    }\r\n})\r\n\r\nexport default dataSlice.reducer;"]},"metadata":{},"sourceType":"module"}
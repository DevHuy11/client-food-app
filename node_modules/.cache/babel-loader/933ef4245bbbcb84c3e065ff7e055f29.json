{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst dataPizzaSlice = createSlice({\n  name: \"pizza\",\n  initialState: {},\n  extraReducers: {\n    [getDataPizza.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getDataPizza.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.pizza = action.payload;\n    },\n    [getDataPizza.rejected]: (state, action) => {\n      state.status = \"failed\";\n    }\n  }\n});\nconst dataSushiSlice = createSlice({\n  name: \"sushi\",\n  initialState: {},\n  extraReducers: {\n    [getDataSushi.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getDataSushi.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.sushi = action.payload;\n    },\n    [getDataSushi.rejected]: (state, action) => {\n      state.status = \"failed\";\n    }\n  }\n}); //Reducers\n\nconst dataPizzaReducers = dataPizzaSlice.reducer;\nconst dataSushiReducers = dataSushiSlice.reducer;\nexport { dataPizzaReducers, dataSushiReducers };","map":{"version":3,"sources":["C:/Users/abc/OneDrive/Documents/Do_an_shop/app/src/features/dataSlice.js"],"names":["createSlice","createAsyncThunk","dataPizzaSlice","name","initialState","extraReducers","getDataPizza","pending","state","action","status","fulfilled","pizza","payload","rejected","dataSushiSlice","getDataSushi","sushi","dataPizzaReducers","reducer","dataSushiReducers"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,MAAMC,cAAc,GAAGF,WAAW,CAAC;AAC/BG,EAAAA,IAAI,EAAE,OADyB;AAE/BC,EAAAA,YAAY,EAAE,EAFiB;AAG/BC,EAAAA,aAAa,EAAE;AACX,KAACC,YAAY,CAACC,OAAd,GAAwB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACE,MAAN,GAAe,SAAf;AACH,KAHU;AAIX,KAACJ,YAAY,CAACK,SAAd,GAA0B,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,MAAAA,KAAK,CAACE,MAAN,GAAe,SAAf;AACAF,MAAAA,KAAK,CAACI,KAAN,GAAcH,MAAM,CAACI,OAArB;AACD,KAPU;AAQX,KAACP,YAAY,CAACQ,QAAd,GAAyB,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACxCD,MAAAA,KAAK,CAACE,MAAN,GAAe,QAAf;AACH;AAVU;AAHgB,CAAD,CAAlC;AAgBA,MAAMK,cAAc,GAAGf,WAAW,CAAC;AAC/BG,EAAAA,IAAI,EAAE,OADyB;AAE/BC,EAAAA,YAAY,EAAE,EAFiB;AAG/BC,EAAAA,aAAa,EAAE;AACX,KAACW,YAAY,CAACT,OAAd,GAAwB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACE,MAAN,GAAe,SAAf;AACH,KAHU;AAIX,KAACM,YAAY,CAACL,SAAd,GAA0B,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,MAAAA,KAAK,CAACE,MAAN,GAAe,SAAf;AACAF,MAAAA,KAAK,CAACS,KAAN,GAAcR,MAAM,CAACI,OAArB;AACD,KAPU;AAQX,KAACG,YAAY,CAACF,QAAd,GAAyB,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACxCD,MAAAA,KAAK,CAACE,MAAN,GAAe,QAAf;AACH;AAVU;AAHgB,CAAD,CAAlC,C,CAiBA;;AAEA,MAAMQ,iBAAiB,GAAGhB,cAAc,CAACiB,OAAzC;AACA,MAAMC,iBAAiB,GAAGL,cAAc,CAACI,OAAzC;AACA,SAASD,iBAAT,EAA4BE,iBAA5B","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\nconst dataPizzaSlice = createSlice({\r\n    name: \"pizza\",\r\n    initialState: {},\r\n    extraReducers: {\r\n        [getDataPizza.pending]: (state, action) => {\r\n            state.status = \"loading\";\r\n        },\r\n        [getDataPizza.fulfilled]: (state, action) => {\r\n          state.status = \"success\";\r\n          state.pizza = action.payload;\r\n        },\r\n        [getDataPizza.rejected]: (state, action) => {\r\n            state.status = \"failed\";\r\n        },\r\n    }\r\n})\r\nconst dataSushiSlice = createSlice({\r\n    name: \"sushi\",\r\n    initialState: {},\r\n    extraReducers: {\r\n        [getDataSushi.pending]: (state, action) => {\r\n            state.status = \"loading\";\r\n        },\r\n        [getDataSushi.fulfilled]: (state, action) => {\r\n          state.status = \"success\";\r\n          state.sushi = action.payload;\r\n        },\r\n        [getDataSushi.rejected]: (state, action) => {\r\n            state.status = \"failed\";\r\n        },\r\n    }\r\n})\r\n\r\n//Reducers\r\n\r\nconst dataPizzaReducers = dataPizzaSlice.reducer\r\nconst dataSushiReducers = dataSushiSlice.reducer\r\nexport { dataPizzaReducers, dataSushiReducers };"]},"metadata":{},"sourceType":"module"}
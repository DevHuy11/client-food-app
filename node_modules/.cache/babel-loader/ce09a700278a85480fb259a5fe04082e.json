{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mern\\\\Do_an_shop\\\\app\\\\src\\\\components\\\\body\\\\smallComponent\\\\CheckingForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Card, CardActions, CardContent, CardMedia, Button, Typography, Modal, Link } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\"; //\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\"; ///API\n\nimport { handleClose } from \"../../../features/HandleClickToAppearCheckoutForm\";\nimport { addToCart } from \"../../../store/AxiosLibrary\";\nimport Cart from \"../cart/Cart\"; /////////////////////////////////////////////////////////////////////////////////////////\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkingform = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [count, setCount] = useState(1);\n  const [callback, setCallback] = useState(false);\n  const open = useSelector(state => state.handleClick.open);\n  const dataCheckingForm = useSelector(state => state);\n  const checkLogin = useSelector(state => state.user.checkLogin); // const allData = useSelector((state) => state);\n\n  const dataforForm = dataCheckingForm.handleClick.product.payload;\n  const userID = useSelector(state => state.user.user.payload); //If user login push product in array product in mongodb alas\n  //else redirect to /login\n\n  const HandleClose = () => {\n    dispatch(handleClose());\n    setCount(1);\n  };\n\n  const handleClick = async data => {\n    //AddtoCart--->onClick if login -->put method to   server side\n    if (!checkLogin) {\n      navigate(\"/login\");\n    } else {\n      const singleCart = {\n        _id: userID.dataUser._id,\n        quality: count,\n        _id_Product: data._id\n      };\n      addToCart(singleCart);\n    }\n\n    HandleClose();\n  };\n\n  if (dataforForm === undefined) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false); ///////////Component loading\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: HandleClose,\n    className: \"Form_Check_Infor\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"cardForm\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"elementCard\",\n        children: /*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          alt: \"Product is selected\",\n          className: \"imageCard\",\n          image: dataforForm.images[0].imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"elementCard\",\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            component: \"div\",\n            className: \"test1\",\n            children: dataforForm.foodName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"small\",\n            component: \"div\",\n            className: \"test1\",\n            children: dataforForm.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"small\",\n            component: \"div\",\n            className: \"test1\",\n            children: [dataforForm.price, \" $\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setCount(count + 1),\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), count, /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setCount(count > 1 ? count - 1 : 1);\n          },\n          children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          className: \"Button_CheckingForm\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            href: \"/cart\",\n            underline: \"none\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"Go to cart \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleClick(dataforForm),\n            children: \"Add to cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkingform, \"IIUSDaVij6XhfkndIA4TIJKUHPs=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Checkingform;\nexport default Checkingform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkingform\");","map":{"version":3,"sources":["D:/Mern/Do_an_shop/app/src/components/body/smallComponent/CheckingForm.jsx"],"names":["React","useEffect","useState","Box","Card","CardActions","CardContent","CardMedia","Button","Typography","Modal","Link","AddIcon","RemoveIcon","useNavigate","useSelector","useDispatch","handleClose","addToCart","Cart","Checkingform","dispatch","navigate","count","setCount","callback","setCallback","open","state","handleClick","dataCheckingForm","checkLogin","user","dataforForm","product","payload","userID","HandleClose","data","singleCart","_id","dataUser","quality","_id_Product","undefined","images","imageUrl","foodName","description","price"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n  Modal,\r\n  Link,\r\n} from \"@mui/material\";\r\n\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport RemoveIcon from \"@mui/icons-material/Remove\";\r\n//\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n///API\r\n\r\nimport { handleClose } from \"../../../features/HandleClickToAppearCheckoutForm\";\r\nimport { addToCart } from \"../../../store/AxiosLibrary\";\r\n\r\nimport Cart from \"../cart/Cart\";\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst Checkingform = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [count, setCount] = useState(1);\r\n  const [callback,setCallback] = useState(false)\r\n  \r\n  const open = useSelector((state) => state.handleClick.open);\r\n  const dataCheckingForm = useSelector((state) => state);\r\n  const checkLogin = useSelector((state) => state.user.checkLogin);\r\n  // const allData = useSelector((state) => state);\r\n  const dataforForm = dataCheckingForm.handleClick.product.payload;\r\n  const userID = useSelector((state) => state.user.user.payload);\r\n\r\n  //If user login push product in array product in mongodb alas\r\n  //else redirect to /login\r\n\r\n  const HandleClose = () => {\r\n    dispatch(handleClose());\r\n    setCount(1);\r\n  };\r\n\r\n  const handleClick = async (data) => {\r\n    //AddtoCart--->onClick if login -->put method to   server side\r\n    if (!checkLogin) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      const singleCart = {\r\n        _id: userID.dataUser._id,\r\n        quality: count,\r\n        _id_Product: data._id,\r\n      };\r\n      addToCart(singleCart);\r\n    }\r\n    HandleClose();\r\n  };\r\n\r\n  if (dataforForm === undefined) return <></>; ///////////Component loading\r\n\r\n  return (\r\n    <Modal open={open} onClose={HandleClose} className=\"Form_Check_Infor\">\r\n      <Card className=\"cardForm\">\r\n        <Box className=\"elementCard\">\r\n          <CardMedia\r\n            component=\"img\"\r\n            alt=\"Product is selected\"\r\n            className=\"imageCard\"\r\n            image={dataforForm.images[0].imageUrl}\r\n          />\r\n        </Box>\r\n        <Box className=\"elementCard\">\r\n          <CardContent>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h6\"\r\n              component=\"div\"\r\n              className=\"test1\"\r\n            >\r\n              {dataforForm.foodName}\r\n            </Typography>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"small\"\r\n              component=\"div\"\r\n              className=\"test1\"\r\n            >\r\n              {dataforForm.description}\r\n            </Typography>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"small\"\r\n              component=\"div\"\r\n              className=\"test1\"\r\n            >\r\n              {dataforForm.price} $\r\n            </Typography>\r\n          </CardContent>\r\n          <Button onClick={() => setCount(count + 1)}>\r\n            <AddIcon />\r\n          </Button>\r\n          {count}\r\n          <Button\r\n            onClick={() => {\r\n              setCount(count > 1 ? count - 1 : 1);\r\n            }}\r\n          >\r\n            <RemoveIcon />\r\n          </Button>\r\n          <CardActions className=\"Button_CheckingForm\">\r\n            <Link href=\"/cart\" underline=\"none\">\r\n              <Button>Go to cart </Button>\r\n            </Link>\r\n            <Button onClick={() => handleClick(dataforForm)}>\r\n              Add to cart\r\n            </Button>\r\n          </CardActions>\r\n        </Box>\r\n      </Card>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Checkingform;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mern\\\\Do_an_shop\\\\app\\\\src\\\\components\\\\body\\\\smallComponent\\\\CardComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Box, Card, CardActions, Link, CardContent, CardMedia, Button, Typography } from '@mui/material';\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nimport { handleOpen, handleClose } from \".\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardComponent = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  useEffect(() => {\n    AOS.init({\n      offset: 200 // duration: 10,\n      // easing: 'ease-in-sine',\n      // delay: 10,\n\n    });\n  }, []); //dropDown button\n  ///////////Function handle event\n\n  const [toggleClick, setToggleClick] = useState(false);\n\n  const handleToggleHover = () => setToggleClick(true);\n\n  const handleToggleLeave = () => setToggleClick(false);\n\n  const classNameChangeColor = toggleClick ? \"hoverImageCard\" : \"dispayNone\";\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"childElementCard\",\n    \"data-aos\": \"zoom-in-down\",\n    children: /*#__PURE__*/_jsxDEV(CardActions, {\n      onMouseEnter: handleToggleHover,\n      onMouseLeave: handleToggleLeave,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: classNameChangeColor,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"hoverButton\",\n          underline: \"none\" //   onClick={handleOpen()}\n          ,\n          children: \"Add to Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            component: \"div\",\n            className: \"textNameFood\",\n            children: data.foodName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            component: \"div\",\n            className: \"textNameFood\",\n            children: [data.price, \" $\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        alt: \"This is product\",\n        className: \"imageCard\",\n        image: data.images[0].imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CardComponent, \"bePKxRVsH9a8cgrGG/vZhGjeaeo=\");\n\n_c = CardComponent;\nexport default CardComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardComponent\");","map":{"version":3,"sources":["D:/Mern/Do_an_shop/app/src/components/body/smallComponent/CardComponent.jsx"],"names":["React","useState","useEffect","Box","Card","CardActions","Link","CardContent","CardMedia","Button","Typography","AOS","handleOpen","handleClose","CardComponent","data","init","offset","toggleClick","setToggleClick","handleToggleHover","handleToggleLeave","classNameChangeColor","foodName","price","images","imageUrl"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,WAApB,EAAiCC,IAAjC,EAAuCC,WAAvC,EAAoDC,SAApD,EAA+DC,MAA/D,EAAuEC,UAAvE,QAAyF,eAAzF;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAO,kBAAP;AACA,SAAQC,UAAR,EAAmBC,WAAnB,QAAqC,GAArC;;;AACA,MAAMC,aAAa,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAEhCb,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,GAAG,CAACK,IAAJ,CAAS;AACLC,MAAAA,MAAM,EAAE,GADH,CAEL;AACA;AACA;;AAJK,KAAT;AAMH,GAPQ,EAON,EAPM,CAAT,CAFgC,CAYlC;AACA;;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,KAAD,CAA9C;;AACA,QAAMmB,iBAAiB,GAAG,MAAMD,cAAc,CAAC,IAAD,CAA9C;;AACA,QAAME,iBAAiB,GAAG,MAAMF,cAAc,CAAC,KAAD,CAA9C;;AAGA,QAAMG,oBAAoB,GAAGJ,WAAW,GAAG,gBAAH,GAAsB,YAA9D;AAEA,sBACM,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,gBAAS,cAA5C;AAAA,2BACI,QAAC,WAAD;AAAa,MAAA,YAAY,EAAEE,iBAA3B;AACY,MAAA,YAAY,EAAEC,iBAD1B;AAAA,8BAGI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAEC,oBAAhB;AAAA,gCACQ,QAAC,MAAD;AACE,UAAA,SAAS,EAAC,aADZ;AAEE,UAAA,SAAS,EAAC,MAFZ,CAGA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,eAQI,QAAC,WAAD;AAAA,kCACM,QAAC,UAAD;AACI,YAAA,YAAY,MADhB;AAEI,YAAA,OAAO,EAAC,IAFZ;AAGI,YAAA,SAAS,EAAC,KAHd;AAII,YAAA,SAAS,EAAC,cAJd;AAAA,sBAMOP,IAAI,CAACQ;AANZ;AAAA;AAAA;AAAA;AAAA,kBADN,eASM,QAAC,UAAD;AACI,YAAA,YAAY,MADhB;AAEI,YAAA,OAAO,EAAC,IAFZ;AAGI,YAAA,SAAS,EAAC,KAHd;AAII,YAAA,SAAS,EAAC,cAJd;AAAA,uBAMOR,IAAI,CAACS,KANZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBATN;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eA8BQ,QAAC,SAAD;AACI,QAAA,SAAS,EAAC,KADd;AAEI,QAAA,GAAG,EAAC,iBAFR;AAGI,QAAA,SAAS,EAAC,WAHd;AAII,QAAA,KAAK,EAAET,IAAI,CAACU,MAAL,CAAY,CAAZ,EAAeC;AAJ1B;AAAA;AAAA;AAAA;AAAA,cA9BR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADN;AA0CD,CA/DD;;GAAMZ,a;;KAAAA,a;AAiEN,eAAeA,aAAf","sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport { Box, Card, CardActions, Link, CardContent, CardMedia, Button, Typography } from '@mui/material';\r\nimport AOS from \"aos\"\r\nimport \"aos/dist/aos.css\"\r\nimport {handleOpen,handleClose} from \".\"\r\nconst CardComponent = ({ data }) => {\r\n\r\n    useEffect(() => {\r\n        AOS.init({\r\n            offset: 200,\r\n            // duration: 10,\r\n            // easing: 'ease-in-sine',\r\n            // delay: 10,\r\n          });\r\n    }, [])\r\n\r\n\r\n  //dropDown button\r\n  ///////////Function handle event\r\n  const [toggleClick, setToggleClick] = useState(false)\r\n  const handleToggleHover = () => setToggleClick(true)\r\n  const handleToggleLeave = () => setToggleClick(false)\r\n    \r\n\r\n  const classNameChangeColor = toggleClick ? \"hoverImageCard\" : \"dispayNone\"\r\n\r\n  return (\r\n        <Card className=\"childElementCard\" data-aos=\"zoom-in-down\">\r\n            <CardActions onMouseEnter={handleToggleHover}\r\n                        onMouseLeave={handleToggleLeave}>\r\n                {/* <Link href=\"#\"variant=\"body1\"  underline=\"none\"> */}\r\n                <Box className={classNameChangeColor}>\r\n                        <Button \r\n                          className=\"hoverButton\"\r\n                          underline=\"none\"\r\n                        //   onClick={handleOpen()}\r\n                      >\r\n                          Add to Card\r\n                        </Button> \r\n                    <CardContent>\r\n                          <Typography\r\n                              gutterBottom\r\n                              variant=\"h6\"\r\n                              component=\"div\"\r\n                              className=\"textNameFood\"\r\n                          >\r\n                                {data.foodName}\r\n                          </Typography>\r\n                          <Typography\r\n                              gutterBottom\r\n                              variant=\"h6\"\r\n                              component=\"div\"\r\n                              className=\"textNameFood\"\r\n                          >\r\n                                {data.price} $\r\n                          </Typography>\r\n                    </CardContent>\r\n                    </Box>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        alt=\"This is product\"\r\n                        className=\"imageCard\"\r\n                        image={data.images[0].imageUrl }\r\n                    />\r\n                {/* </Link> */}\r\n            </CardActions>\r\n        </Card>\r\n  )\r\n};\r\n\r\nexport default CardComponent\r\n"]},"metadata":{},"sourceType":"module"}